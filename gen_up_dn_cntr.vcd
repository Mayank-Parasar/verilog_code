$date
	Sun Jan 22 20:41:20 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module gen_up_dn_cntr_tb $end
$var wire 32 ! out [31:0] $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$var reg 1 $ sense $end
$scope module cnt $end
$var wire 1 % clk $end
$var wire 32 & data_out [31:0] $end
$var wire 1 ' reset $end
$var wire 1 ( sense $end
$scope begin CNTR[0] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 ) cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[1] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 * cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[2] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 + cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[3] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 , cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[4] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 - cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[5] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 . cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[6] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 / cntr [3:0] $end
$upscope $end
$upscope $end
$scope begin CNTR[7] $end
$scope module U $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 1 ( sense $end
$var reg 4 0 cntr [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
0'
bx &
0%
x$
0#
0"
bx !
$end
#2
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 !
b0 &
1#
1'
1"
1%
#3
0"
0%
#4
1"
1%
#5
0"
0%
#6
1$
1(
0#
0'
1"
1%
#7
0"
0%
#8
b1 )
b1 *
b1 +
b1 ,
b1 -
b1 .
b1 /
b1 0
b10001000100010001000100010001 !
b10001000100010001000100010001 &
1"
1%
#9
0"
0%
#10
b10 0
b10 /
b10 .
b10 -
b10 ,
b10 +
b10 *
b10 )
b100010001000100010001000100010 !
b100010001000100010001000100010 &
1"
1%
#11
0"
0%
#12
b11 )
b11 *
b11 +
b11 ,
b11 -
b11 .
b11 /
b11 0
b110011001100110011001100110011 !
b110011001100110011001100110011 &
1"
1%
#13
0"
0%
#14
b100 0
b100 /
b100 .
b100 -
b100 ,
b100 +
b100 *
b100 )
b1000100010001000100010001000100 !
b1000100010001000100010001000100 &
1"
1%
#15
0"
0%
#16
b101 )
b101 *
b101 +
b101 ,
b101 -
b101 .
b101 /
b101 0
b1010101010101010101010101010101 !
b1010101010101010101010101010101 &
0$
0(
1"
1%
#17
0"
0%
#18
b100 0
b100 /
b100 .
b100 -
b100 ,
b100 +
b100 *
b100 )
b1000100010001000100010001000100 !
b1000100010001000100010001000100 &
1"
1%
#19
0"
0%
#20
b11 )
b11 *
b11 +
b11 ,
b11 -
b11 .
b11 /
b11 0
b110011001100110011001100110011 !
b110011001100110011001100110011 &
1"
1%
#21
0"
0%
#22
b10 0
b10 /
b10 .
b10 -
b10 ,
b10 +
b10 *
b10 )
b100010001000100010001000100010 !
b100010001000100010001000100010 &
1"
1%
#23
0"
0%
#24
b1 )
b1 *
b1 +
b1 ,
b1 -
b1 .
b1 /
b1 0
b10001000100010001000100010001 !
b10001000100010001000100010001 &
1"
1%
#25
0"
0%
#26
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 !
b0 &
1"
1%
#27
0"
0%
#28
1"
1%
#29
0"
0%
#30
1"
1%
#31
0"
0%
